version: '3.5'

services:
  app:
    container_name: nestjs-test
    image: nestjs-test:latest
    build:
      dockerfile: docker/Dockerfile.development
      context: ../
    volumes:
      - ../:/usr/src/app
    ports:
      - '3000:3000'
    tty: true
  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3.9-management-alpine
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  redis-node1:
    build:
      context: redis
    ports:
      - '7000:7000'
      - '17000:17000'
    restart: always
    entrypoint:
      [
        redis-server,
        /etc/redis/rediscluster.conf,
        --port,
        '7000',
        --cluster-announce-ip,
        '${REDIS_CLUSTER_IP}',
      ]
  redis-node2:
    build:
      context: redis
    ports:
      - '7001:7001'
      - '17001:17001'
    restart: always
    entrypoint:
      [
        redis-server,
        /etc/redis/rediscluster.conf,
        --port,
        '7001',
        --cluster-announce-ip,
        '${REDIS_CLUSTER_IP}',
      ]
  redis-node3:
    build:
      context: redis
    ports:
      - '7002:7002'
      - '17002:17002'
    restart: always
    entrypoint:
      [
        redis-server,
        /etc/redis/rediscluster.conf,
        --port,
        '7002',
        --cluster-announce-ip,
        '${REDIS_CLUSTER_IP}',
      ]
  redis-cluster-creator:
    image: redis:6.2.6
    entrypoint:
      [
        /bin/sh,
        -c,
        'echo "yes" | redis-cli --cluster create ${REDIS_CLUSTER_IP}:7000 ${REDIS_CLUSTER_IP}:7001 ${REDIS_CLUSTER_IP}:7002 --cluster-replicas 0',
      ]
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
